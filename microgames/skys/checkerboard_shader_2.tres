[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://rmul5k7ovqim"]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_4akra"]
parameter_name = "scale_uv"
default_value_enabled = true
default_value = Vector2(30, 30)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_sc0rw"]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_1c0mj"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_f5sf8"]
constant = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_aopum"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, 1.0]
expanded_output_ports = [0]
op_type = 4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_4igad"]
size = Vector2(480, 260)
expression = "vec2 xy = mod(scale_uv * uv, vec2(1.));
if (max(xy.x,xy.y) <  0.5 || 0.5 < min(xy.x,xy.y) ) {
  b = 0.0;
} else {
  b = 1.;
}
"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 scale_uv = vec2(30.000000, 30.000000);



void fragment() {
// ColorConstant:5
	vec4 n_out5p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// ColorConstant:4
	vec4 n_out4p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// Input:2
	vec2 n_out2p0 = UV;


// Vector2Parameter:10
	vec2 n_out10p0 = scale_uv;


	float n_out9p0;
// Expression:9
	n_out9p0 = 0.0;
	{
		vec2 xy = mod(n_out10p0 * n_out2p0, vec2(1.));
		if (max(xy.x,xy.y) <  0.5 || 0.5 < min(xy.x,xy.y) ) {
		  n_out9p0 = 0.0;
		} else {
		  n_out9p0 = 1.;
		}
		
	}


// Mix:6
	vec3 n_out6p0 = mix(vec3(n_out5p0.xyz), vec3(n_out4p0.xyz), n_out9p0);


// Output:0
	COLOR.rgb = n_out6p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(560, 60)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_sc0rw")
nodes/fragment/2/position = Vector2(-700, 300)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_1c0mj")
nodes/fragment/4/position = Vector2(-180, 200)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorConstant_f5sf8")
nodes/fragment/5/position = Vector2(-180, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeMix_aopum")
nodes/fragment/6/position = Vector2(200, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeExpression_4igad")
nodes/fragment/9/position = Vector2(-340, 300)
nodes/fragment/9/size = Vector2(480, 260)
nodes/fragment/9/input_ports = "0,3,uv;1,3,scale_uv;"
nodes/fragment/9/output_ports = "0,0,b;"
nodes/fragment/9/expression = "vec2 xy = mod(scale_uv * uv, vec2(1.));
if (max(xy.x,xy.y) <  0.5 || 0.5 < min(xy.x,xy.y) ) {
  b = 0.0;
} else {
  b = 1.;
}
"
nodes/fragment/10/node = SubResource("VisualShaderNodeVec2Parameter_4akra")
nodes/fragment/10/position = Vector2(-680, 400)
nodes/fragment/connections = PackedInt32Array(5, 0, 6, 0, 4, 0, 6, 1, 9, 0, 6, 2, 6, 0, 0, 0, 2, 0, 9, 0, 10, 0, 9, 1)
